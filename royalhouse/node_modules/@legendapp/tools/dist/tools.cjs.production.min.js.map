{"version":3,"file":"tools.cjs.production.min.js","sources":["../src/animationFrameOnce.ts","../src/is.ts","../src/MemoFnComponent.tsx","../src/ResizeObserver.ts","../src/timeoutOnce.ts","../src/useForceRender.ts","../src/useComponentSize.ts","../src/arrayFunctions.ts","../src/useEverHadValue.ts","../src/useInterval.ts","../src/useMakeRef.ts","../src/usePrevious.ts","../src/useStateWithRef.ts"],"sourcesContent":["const animationFrames: Record<string, number> = {};\n\nexport function hasAnimationFrameOnce(name: string) {\n    return !!animationFrames[name];\n}\nexport function animationFrameOnce(name: string, cb: Function) {\n    const t = animationFrames[name];\n\n    if (t) {\n        cancelAnimationFrame(t);\n    }\n\n    animationFrames[name] = requestAnimationFrame(() => {\n        delete animationFrames[name];\n\n        cb();\n    });\n}\nexport function clearAnimationFrameOnce(name: string) {\n    const t = animationFrames[name];\n\n    if (t) {\n        cancelAnimationFrame(t);\n\n        delete animationFrames[name];\n    }\n}\n","export function isArray(obj: unknown): obj is Array<any> {\n    return Array.isArray(obj);\n}\nexport function isString(obj: unknown): obj is string {\n    return typeof obj === 'string';\n}\nexport function isObject(obj: unknown): obj is Record<any, any> {\n    return typeof obj === 'object' && obj !== null && !isArray(obj);\n}\nexport function isNumber(obj: unknown): obj is number {\n    return typeof obj === 'number' && !isNaN(obj);\n}\nexport function isBoolean(obj: unknown): obj is boolean {\n    return obj === true || obj === false;\n}\nexport function isFunction(obj: unknown): obj is Function {\n    return typeof obj === 'function';\n}\n","import React, { Component, ComponentType, createElement, forwardRef, memo, ReactNode } from 'react';\n\ntype TypeOnError = (error: Error, info: ErrorInfo) => boolean | void;\n\ninterface PropsErrorBoundary {\n    onError?: TypeOnError;\n    children: ReactNode;\n}\ninterface StateErrorBoundary {\n    error?: Error;\n}\n\nexport interface ErrorInfo {\n    componentStack: string;\n}\n\nexport interface Config {\n    onError?: TypeOnError;\n}\n\nlet _config: Config = {};\n\nexport function ConfigureMemoFnComponent(config: Config) {\n    _config = config || {};\n}\n\nclass ErrorBoundary extends Component<PropsErrorBoundary, StateErrorBoundary> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            error: null,\n        };\n    }\n    componentDidCatch(error: Error, info: ErrorInfo): void {\n        if (_config.onError) {\n            try {\n                let handled: boolean | undefined;\n                if (this.props.onError) {\n                    handled = this.props.onError(error, info) as boolean | undefined;\n                }\n\n                if (!handled) {\n                    _config.onError(error, info);\n                }\n            } catch (ignoredError) {\n                console.log(ignoredError);\n            }\n        }\n\n        this.setState({ error });\n    }\n\n    render() {\n        const { children } = this.props;\n        const { error } = this.state;\n\n        if (error !== null) {\n            debugger;\n            return null;\n        }\n\n        return children || null;\n    }\n}\n\nexport function MemoFnComponent<T extends ComponentType<any>>(Component: T, onError?: TypeOnError): T {\n    onError = onError || _config.onError;\n    let out = Component as any;\n    if (onError) {\n        out = (props: any) => <ErrorBoundary>{createElement(Component, Object.assign({ onError }, props))}</ErrorBoundary>;\n    }\n    return (memo(out) as unknown) as T;\n}\n\nexport function MemoFnComponentWithRef<T extends ComponentType<any>>(Component: T, onError?: TypeOnError): T {\n    let out = Component as any;\n    if (onError || _config.onError) {\n        const Wrapped = (props: any, ref: any) => (\n            <ErrorBoundary>{createElement(Component, Object.assign({ onError, ref }, props))}</ErrorBoundary>\n        );\n        out = forwardRef(Wrapped);\n    }\n\n    return (memo(out) as unknown) as T;\n}\n","// @ts-ignore\nlet ResizeObserver = typeof window !== 'undefined' && window?.ResizeObserver;\n\nconst polyfillResizeObserver = function polyfillResizeObserver(resizeObserver: any) {\n    // @ts-ignore\n    ResizeObserver = window?.ResizeObserver || resizeObserver;\n};\n\nexport { ResizeObserver, polyfillResizeObserver };\n","const timeouts: Record<string, any> = {};\n\nexport function hasTimeoutOnce(name: string) {\n    return !!timeouts[name];\n}\nexport function timeoutOnce(name: string, cb: Function, time: number, ...args: any[]) {\n    const t = timeouts[name];\n\n    if (t) {\n        clearTimeout(t);\n    }\n\n    timeouts[name] = setTimeout(() => {\n        delete timeouts[name];\n\n        cb(...args);\n    }, time);\n}\nexport function clearTimeoutOnce(name: string) {\n    const t = timeouts[name];\n\n    if (t) {\n        clearTimeout(t);\n\n        delete timeouts[name];\n    }\n}\n","import { useReducer } from 'react';\n\nexport function useForceRender() {\n    const [, forceRender] = useReducer(s => s + 1, 0);\n    return forceRender as () => void;\n}\n","import { RefObject, useCallback, useEffect, useLayoutEffect, useRef } from 'react';\nimport { ResizeObserver } from './ResizeObserver';\nimport { useForceRender } from './useForceRender';\n\nfunction getSize(el: HTMLElement): { width: number; height: number } {\n    return el\n        ? {\n              width: el.offsetWidth,\n              height: el.offsetHeight,\n          }\n        : {\n              width: 0,\n              height: 0,\n          };\n}\n\nexport const useComponentSize = function useComponentSize(ref: RefObject<HTMLElement>): { width: number; height: number } {\n    const refSize = useRef<{ width: number; height: number }>({ width: 0, height: 0 });\n    const fr = useForceRender();\n\n    const handleResize = useCallback(() => {\n        if (ref.current) {\n            const oldSize = refSize.current;\n            const newSize = getSize(ref.current);\n            if (newSize && (newSize.width !== oldSize.width || newSize.height !== oldSize.height)) {\n                refSize.current = newSize;\n                fr();\n            }\n        }\n    }, [ref, fr]);\n\n    // @ts-ignore\n    useLayoutEffect(() => {\n        const el = ref.current;\n        if (el) {\n            handleResize();\n\n            let resizeObserver = new ResizeObserver(handleResize);\n            resizeObserver.observe(el);\n\n            return () => {\n                resizeObserver.disconnect();\n                resizeObserver = undefined;\n            };\n        }\n    }, [ref.current]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    return refSize.current;\n};\n\nexport const useComponentSizeChange = function useComponentSizeChange(\n    ref: RefObject<HTMLElement>,\n    cb: (value: { width: number; height: number }) => void\n) {\n    const refSize = useRef<{ width: number; height: number }>({ width: 0, height: 0 });\n\n    const handleResize = useCallback(() => {\n        if (ref.current) {\n            const oldSize = refSize.current;\n            const newSize = getSize(ref.current);\n            if (newSize && (newSize.width !== oldSize.width || newSize.height !== oldSize.height)) {\n                refSize.current = newSize;\n                cb?.(newSize);\n            }\n        }\n    }, [ref, cb]);\n\n    // @ts-ignore\n    useEffect(() => {\n        const el = ref.current;\n        if (el) {\n            handleResize();\n\n            let resizeObserver = new ResizeObserver(handleResize);\n            resizeObserver.observe(el);\n\n            return () => {\n                resizeObserver.disconnect();\n                resizeObserver = undefined;\n            };\n        }\n    }, [ref.current]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    return refSize.current;\n};\n","export function arrayRemove<T>(array: T[], value: T) {\n    const index = array.indexOf(value);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n\n    return index;\n}\n\nexport function arrayRemoveAt<T>(array: T[], index: number) {\n    return array.splice(index, 1)[0];\n}\n\n// Binary search to find insertion index\nfunction arrayFindInsertIndex<T>(array: T[], ele: T, comp: (a: T, b: T) => number) {\n    let low = 0;\n    let high = array.length - 1;\n\n    while (low <= high) {\n        const i = (low + high) >> 1;\n        const c = comp(array[i], ele);\n\n        if (c < 0) {\n            low = i + 1;\n        } else if (c > 0) {\n            high = i - 1;\n        } else {\n            return i;\n        }\n    }\n\n    return low;\n}\n\nexport function arrayInsertSorted<T>(array: T[], ele: T, comp: (a: T, b: T) => number) {\n    const idx = arrayFindInsertIndex(array, ele, comp);\n\n    array.splice(idx, 0, ele);\n\n    return idx;\n}\n","import { useRef } from 'react';\n\nexport const useEverHadValue = function useEverHadValue(value: any, targetValue: any) {\n    const ref = useRef<boolean>(false);\n    ref.current = ref.current || value === targetValue;\n\n    return ref.current;\n};\n","import { useEffect } from 'react';\n\nexport function useInterval(cb: () => void, ms: number) {\n    useEffect(() => {\n        const int = setInterval(() => {\n            cb();\n        }, ms);\n\n        return () => clearInterval(int);\n    }, [ms, cb]);\n}\n","import { MutableRefObject, useRef } from 'react';\n\nexport function useMakeRef<T>(value: T): MutableRefObject<T | undefined> {\n    const ref = useRef<T>();\n    ref.current = value;\n    return ref;\n}\n","import { useRef } from 'react';\n\nexport function usePrevious<T>(value: T) {\n    const ref = useRef<T>();\n    const ret = ref.current;\n    ref.current = value;\n    return ret;\n}\n","import { Dispatch, MutableRefObject, SetStateAction, useCallback, useRef, useState } from 'react';\nimport { isFunction } from './is';\n\nexport function useStateWithRef<T>(initialValue?: T | (() => T)): [T | undefined, Dispatch<SetStateAction<T>>, MutableRefObject<T>] {\n    const [value, setValue] = useState(initialValue);\n    const ref = useRef<T>(value);\n\n    // Set wraps around useState's set and saves to ref\n    const set = useCallback((v: T | ((prevState: T) => T)) => {\n        if (isFunction(v)) {\n            v = v(ref.current);\n        }\n        ref.current = v;\n        setValue(v);\n    }, []);\n\n    return [value, set, ref];\n}\n"],"names":["animationFrames","isArray","obj","Array","isFunction","_config","ErrorBoundary","props","state","error","componentDidCatch","info","onError","handled","this","ignoredError","console","log","setState","render","children","Component","exports","window","_window","ResizeObserver","timeouts","useForceRender","useReducer","s","getSize","el","width","offsetWidth","height","offsetHeight","config","out","React","createElement","Object","assign","memo","forwardRef","ref","name","cb","t","cancelAnimationFrame","requestAnimationFrame","array","ele","comp","idx","low","high","length","i","c","arrayFindInsertIndex","splice","value","index","indexOf","clearTimeout","isNaN","resizeObserver","time","args","setTimeout","refSize","useRef","fr","handleResize","useCallback","current","oldSize","newSize","useLayoutEffect","observe","disconnect","undefined","useEffect","targetValue","ms","int","setInterval","clearInterval","ret","initialValue","useState","setValue","v"],"mappings":"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"}